# ABSTRACT: Traverse Soar working memory dumps
package Soar::WM;
use strict;
use warnings;

use Soar::WM::Slurp qw(read_wm);
use Soar::WM::Element;

use Carp;
use base 'Exporter';
our @EXPORT = qw( wm_root_from_file );
our @EXPORT_OK = qw( wm_root );

# VERSION

print  'root is ' . __PACKAGE__->wm_root_from_file($ARGV[0])->id unless caller;

#return a Soar::WM::Element object for the root
sub wm_root_from_file {
	my ($file) = @_;
	croak 'missing file name argument'
		unless $file;

	return wm_root(file => $file);

}

#args should be file=>xx or text=>xx.
sub wm_root {
	my ($wme_hash, $root_name) = read_wm(@_);
	
	my $wm = bless $wme_hash;
	return Soar::WM::Element->new($wm, $root_name);
}

1;

__END__

=head1 NAME

Soar::WM - Perl extension for representing Soar working memory given a WME dump file

=head1 SYNOPSIS

  use Soar::WM;
  my $root = wm_root_from_file($WMEfile);
  print $root->id;

=head1 DESCRIPTION

This module represents Soar's working memory. It can be used for traversing and manipulating WME dumps
generated by Soar.

=head METHODS

=head2 C<wm_root_from_file>
This function is automatically exported into the using module's namespace. It is a shortcut for:
 wm_root(file=>$arg)
It's single argument is the path to a WME dump file. It returns a L<Soar::WM::Element> object representing the root
of the given WME dump.

=head2 C<wm_root>
This function reads in a Soar WME dump and returnes a L<Soar::WM::Element> representing its root.
It takes a named argument, file or text. Using C<wm_root(file=>path)>, you can create an object given the path to a WME dump file.
Using C<wm_root(text=>'(S1 ^foo bar)')>, you can create an object using a given WME dump text. 
If neither argument is specified, this function will wait for input from standard in.

=head2 TO DO

Currently there is no separate constructor for a Soar::WM object; instead, the only existing functions return the root of a Soar::WM object,
which is an instance of L<Soar::WM::Element>. Besides a separate constructor, one might find it useful to be able to grab any element of a Soar::WM
object given its ID. I have not found this expedient, and so have not coded. If you really want it, just shoot me an email.

=head1 SEE ALSO

The homepage for the Soar cognitive architecture is here: L<http://sitemaker.umich.edu/soar/home>.

